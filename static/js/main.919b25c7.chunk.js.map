{"version":3,"sources":["components/Header.js","components/Home.js","components/Certification.js","data.js","components/About.js","components/Card.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","to","style","textDecoration","Button","variant","Home","src","alt","Certification","props","url","name","org","date","skills","certifications","education","About","map","s","Badge","c","organisation","role","MyCard","Card","width","margin","Img","Body","Title","title","Text","text","href","calculatorDescription","serverlessToDoDescription","catGameDescription","Projects","Footer","App","basename","from","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.919b25c7.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\nimport '../styles.sass'\n\nexport const Header = () => {\n  return (\n    <div className='headerContainer'>\n      <div className='nav'>\n        <Link to='/' style={{ textDecoration: 'none' }}> <Button variant=\"warning\">Home</Button> </Link>\n        <Link to='/about' style={{ textDecoration: 'none' }}> <Button variant=\"warning\">Resume</Button> </Link>\n        <Link to='/projects' style={{ textDecoration: 'none' }}> <Button variant=\"warning\">Projects</Button> </Link>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport '../styles.sass'\n\nexport const Home = () => {\n  return (\n    <div className='homediv'>\n      <h1 className='into'> <span>Hi!</span> I am Alena.</h1>\n      <h3>Software Developer based in London</h3>\n      <img src='https://emojipedia-us.s3.dualstack.us-west-1.amazonaws.com/thumbs/320/apple/81/female-technologist-type-1-2_1f469-1f3fb-200d-1f4bb.png' alt='developer' />\n    </div>\n  )\n}\n","import React from 'react'\nimport '../styles.sass'\n\nexport const Certification = (props) => {\n  return (\n    <div className='certif'>\n      <img src={props.url} alt={props.name} />\n      <div className='description'>\n        <div className='name'>{props.name}</div>\n        <div className='cert-description'>\n          <div>{props.org}</div>\n          <div>{props.date}</div>\n        </div>\n      </div>\n\n    </div>\n  )\n}\n","export const skills =\n    ['JavaScript', 'React.js', 'Responsive Web Design', 'Front-End Development', 'C#', '.Net Core', 'Docker', 'Kubernetes', 'AWS', 'Serverless']\n\nexport const certifications = [\n    {\n        \"name\": 'Diploma in C# programming',\n        \"date\": 'Jun 2020',\n        'organisation': 'Alison',\n        'url': 'https://cdn01.alison-static.net/public/html/site/img/alison-icon-default.png'\n    },\n    {\n        \"name\": 'Web Development Bootcamp',\n        \"date\": 'Jul 2019',\n        'organisation': 'Udemy',\n        'url': 'https://www.pipelinersales.com/wp-content/uploads/2019/06/large-udemy.jpg'\n    },\n    {\n        \"name\": 'JavaScript Algorithms and Data Structures',\n        \"date\": 'Apr 2019',\n        'organisation': 'FreeCodeCamp',\n        'url': 'https://s3.amazonaws.com/freecodecamp/curriculum-diagram-full.jpg'\n    },\n    {\n        \"name\": 'Advanced Styling with Responsive Design ',\n        \"date\": 'Apr 2019',\n        'organisation': 'Coursera',\n        'url': 'https://d3njjcbhbojbot.cloudfront.net/api/utilities/v1/imageproxy/https://coursera.s3.amazonaws.com/media/coursera-logo-square.png?auto=format%2Ccompress&dpr=1'\n    },\n    {\n        \"name\": 'React.js Essential Training',\n        \"date\": 'May 2019',\n        'organisation': 'LinkedIn',\n        'url': 'https://1000logos.net/wp-content/uploads/2017/03/LinkedIn-Logo.png'\n    }\n]\n\nexport const education = [\n    {\n        \"name\": 'Chelyabinsk State University',\n        \"date\": '2019-2023',\n        'role': 'Software Engineering',\n        'url': 'https://i2.wp.com/www.eurashe.eu/wp-content/uploads/2014/11/CSU_logo.png?fit=225%2C225&ssl=1'\n    },\n    {\n        \"name\": 'Udacity',\n        \"date\": '2020-2020',\n        'role': \"AWS Cloud Developer\",\n        'url': 'https://i.pinimg.com/originals/d2/7b/b0/d27bb073e4d1c175eea105adcb622dda.png'\n    }\n]","import React from 'react'\nimport '../styles.sass'\nimport { Badge } from 'react-bootstrap'\nimport { Certification } from './Certification'\nimport { skills, certifications, education } from '../data'\n\nexport const About = () => {\n  return (\n    <div className='aboutdiv'>\n      <div className='ab'>\n        <h1 className='about'>Skills</h1>\n        <div className='skill'>\n          {\n            skills.map(s => <Badge variant='dark'> {s} </Badge>)\n          }\n        </div>\n      </div>\n      <div className='ab'>\n        <h1 className='background'>Courses</h1>\n        {\n          certifications.map(\n            c => <Certification name={c.name} date={c.date} org={c.organisation} url={c.url} />\n          )\n        }\n      </div>\n      <div className='ab'>\n        <h1 className='background'>Education</h1>\n        {\n          education.map(\n            c => <Certification name={c.name} date={c.date} org={c.role} url={c.url} />\n          )\n        }\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Card, Button } from 'react-bootstrap'\n\nexport const MyCard = (props) => {\n  return (\n    <Card style={{ width: '18rem', margin: '30px 10px'}}>\n      <Card.Img variant=\"top\" />\n      <Card.Body>\n        <Card.Title>{props.title}</Card.Title>\n        <Card.Text>\n          {props.text}\n        </Card.Text>\n        <a href={props.url} style={{ textDecoration: 'none' }}> <Button variant='primary'>Go to GitHub</Button> </a>\n      </Card.Body>\n    </Card>\n  )\n}\n","import React from 'react'\nimport { MyCard } from './Card'\n\nconst calculatorDescription={\n  text: 'A full-stack calculator app. Stack: React, C#, ASP.Net Core',\n  url: 'https://github.com/alenaalena512/calculator'\n}\n\nconst serverlessToDoDescription={\n  text: 'To-do list app. Stack: React, Node.js, OAuth, Serverless',\n  url: 'https://github.com/alenaalena512/serverless-todo'\n}\n\nconst catGameDescription={\n  text: 'A to-do application with OAuth authorisation. Stack: React, JS, Node.js, Serverless',\n  url: 'https://alenaalena512.github.io/cat-game/'\n}\nexport const Projects = () => {\n  return (\n    <div className='projects'>\n      <MyCard title='Cat Game' {...catGameDescription} />\n      <MyCard title='Serverless' {...serverlessToDoDescription} />\n      <MyCard title='Calculator' {...calculatorDescription} />\n    </div>\n  )\n}\n","import React from 'react'\nimport { GrLinkedin, GrGithub } from 'react-icons/gr'\nimport '../styles.sass'\n\nexport const Footer = () => {\n  return (\n    <div className='footer'>\n      <div>Contact me\n       <a href='https://github.com/alenaalena512'> <GrGithub /> </a>\n       <a href='https://www.linkedin.com/in/alena-gusenko-102498183/'> <GrLinkedin /> </a>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\nimport { Header } from './components/Header'\nimport { Home } from './components/Home'\nimport { About } from './components/About'\nimport { Projects } from './components/Projects'\nimport './App.sass'\nimport { BrowserRouter as HashRouter, Redirect, Switch, Route } from 'react-router-dom'\nimport { Footer } from './components/Footer'\n\nconst App = () => {\n  return (\n    <HashRouter basename='/portfolio'>\n      <Header />\n        <Redirect from='/home' to='/' />\n        <Route exact path='/' component={Home} />\n        <Route path='/about' component={About} />\n        <Route path='/projects' component={Projects} />\n      <Footer />\n    </HashRouter>\n  )\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister()\n      })\n      .catch(error => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.sass'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}